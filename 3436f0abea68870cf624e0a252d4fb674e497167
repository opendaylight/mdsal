{
  "comments": [
    {
      "key": {
        "uuid": "57a778fb_9df55c06",
        "filename": "binding/mdsal-binding-dom-codec/src/main/java/org/opendaylight/mdsal/binding/dom/codec/impl/IdentifiableItemCodec.java",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 649
      },
      "writtenOn": "2018-11-23T18:32:28Z",
      "side": 1,
      "message": "this is not a hot path and this code behaves quite differently than the original.",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 61,
        "endChar": 51
      },
      "revId": "3436f0abea68870cf624e0a252d4fb674e497167",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8507f8a_889fa84c",
        "filename": "binding/mdsal-binding-dom-codec/src/main/java/org/opendaylight/mdsal/binding/dom/codec/impl/IdentifiableItemCodec.java",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-11-26T10:03:50Z",
      "side": 1,
      "message": "\u003e this is not a hot path and \n\nshows up in JMC in MDSAL-387\n\nEither way, can\u0027t hurt to optimize this, no? Why you against?\n\n\u003e this code behaves quite differently than the original.\n\nHow so? The line 55 temporary keys \u003d new LinkedHashMap\u003c\u003e() becomes an ImmutableMap in the original line 59 anyway, right?  Or because the LinkedHashMap guarantees predictable iteration order?  But so does an ImmutableMap created by a Builder, see e.g.  https://stackoverflow.com/questions/3810738/google-collections-immutablemap-iteration-order\n\nWill you clarify your objection, or remove your -1 ?",
      "parentUuid": "57a778fb_9df55c06",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 61,
        "endChar": 51
      },
      "revId": "3436f0abea68870cf624e0a252d4fb674e497167",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}
@*
 * Copyright (c) 2016 Cisco Systems, Inc. and others.  All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
 *@

@**********************************************************
* Twirl YangTemplate for generating yang snippets.        *
* Twirl is transformed to Scala and compiled. Then,       *
* it can be called from Java with particular input        *
* parameters to render desired output code.               *
***********************************************************@

@import org.opendaylight.yangtools.yang.model.api.GroupingDefinition
@import org.opendaylight.yangtools.yang.model.api.Module
@import org.opendaylight.yangtools.yang.model.api.Status

@(groupingDef: GroupingDefinition, module: Module)
grouping @{groupingDef.getQName().getLocalName()} {
    @if(groupingDef.getGroupings() != null && !groupingDef.getGroupings().isEmpty()) {
        @yangTemplateWriteGroupingDefs(groupingDef.getGroupings(), module)
    }
    @if(groupingDef.getChildNodes() != null && !groupingDef.getChildNodes().isEmpty()) {
        @yangTemplateWriteDataSchemaNodes(groupingDef.getChildNodes(), module)
    }
    @if(groupingDef.getStatus() != Status.CURRENT) {
        status @{groupingDef.getStatus()};
    }
    @if(groupingDef.getUnknownSchemaNodes() != null && !groupingDef.getUnknownSchemaNodes().isEmpty()) {
        @yangTemplateWriteUnknownSchemaNodes(groupingDef.getUnknownSchemaNodes(), module)
    }
    @if(groupingDef.getActions() != null && !groupingDef.getActions().isEmpty()) {
        @yangTemplateWriteActions(groupingDef.getActions(), module)
    }
}
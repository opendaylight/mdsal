@*
 * Copyright (c) 2016 Cisco Systems, Inc. and others.  All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
 *@

@**********************************************************
* Twirl YangTemplate for generating yang snippets.        *
* Twirl is transformed to Scala and compiled. Then,       *
* it can be called from Java with particular input        *
* parameters to render desired output code.               *
***********************************************************@

@import org.opendaylight.yangtools.yang.model.api.ActionDefinition
@import org.opendaylight.yangtools.yang.model.api.Module
@import org.opendaylight.yangtools.yang.model.api.Status

@(action: ActionDefinition, module: Module)
action @{action.getQName().getLocalName()} {
    @if(action.getDescription().isPresent()) {
        "@{action.getDescription().get()}";
    }
    @if(action.getGroupings() != null && !action.getGroupings().isEmpty()) {
        @yangTemplateWriteGroupingDefs(action.getGroupings(), module)
    }
    @if(action.getInput() != null && action.getInput().getChildNodes != null && !action.getInput().getChildNodes().isEmpty()) {
        input {
            @yangTemplateWriteDataSchemaNodes(action.getInput().getChildNodes, module)
        }
    }
    @if(action.getOutput() != null && action.getOutput().getChildNodes != null && !action.getOutput().getChildNodes().isEmpty()) {
        output {
            @yangTemplateWriteDataSchemaNodes(action.getOutput().getChildNodes, module)
        }
    }
    @if(action.getReference().isPresent()) {
        reference "@{action.getReference().get()}";
    }
    @if(action.getStatus() != Status.CURRENT) {
        status @{action.getStatus()};
    }
}

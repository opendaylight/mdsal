@*
 * Copyright (c) 2016 Cisco Systems, Inc. and others.  All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
 *@

@import org.opendaylight.mdsal.binding.javav2.model.api.GeneratedTransferObject
@import org.opendaylight.mdsal.binding.javav2.model.api.GeneratedType
@import org.opendaylight.mdsal.binding.javav2.model.api.GeneratedTypeForBuilder
@import org.opendaylight.mdsal.binding.javav2.java.api.generator.util.TextTemplateUtil.formatDataForJavaDoc
@import org.opendaylight.mdsal.binding.javav2.java.api.generator.util.TextTemplateUtil.wrapToDocumentation
@import org.opendaylight.mdsal.binding.javav2.spec.runtime.BindingNamespaceType

@(genType: GeneratedType, enums: String, annotations: String, generatedMethods: String, generatedImports: String,
generatedConstants: String, innerClasses: String, getII: String, keyParams: String)
@*
 * Template method which generate the whole body of the interface.
 *
 * @return string with code for interface body in JAVA format
 *@
@if(genType != null) {
@{wrapToDocumentation(formatDataForJavaDoc(genType))}
@{annotations}
public interface @{genType.getName}
    @if(!generatedImports.isEmpty){extends @{generatedImports}}
{
    @{innerClasses}
    @{enums}
    @{generatedConstants}
    @{generatedMethods}

    @if(getII != null) {
    public static InstanceIdentifier<@{genType.getName}> getInstanceIdentifier(@{keyParams}) {
      return @{getII};
    }
    }
}
}
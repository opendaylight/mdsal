@*
 * Copyright (c) 2016 Cisco Systems, Inc. and others.  All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
 *@

@import java.util.List
@import org.opendaylight.mdsal.binding.javav2.model.api.GeneratedTransferObject
@import org.opendaylight.mdsal.binding.javav2.java.api.generator.util.TextTemplateUtil.formatDataForJavaDoc
@import org.opendaylight.mdsal.binding.javav2.java.api.generator.util.TextTemplateUtil.wrapToDocumentation
@import org.opendaylight.mdsal.binding.javav2.java.api.generator.util.TextTemplateUtil.getAccessModifier
@import org.opendaylight.mdsal.binding.javav2.java.api.generator.util.TextTemplateUtil.getClarification

@(genType: GeneratedTransferObject, typeName: String, importedNames: Map[String, String], generatedParameters: Map[String, String])
@if(genType != null) {
@{wrapToDocumentation(formatDataForJavaDoc(genType, getClarification))}
public class @{typeName} {
    private @{typeName}() {
        //Exists only to defeat instantiation.
    }

    @for(method <- genType.getMethodDefinitions) {
        @{getAccessModifier(method.getAccessModifier)}
        @if(method.isStatic) {static}
        @if(method.isFinal) { final}
        @{importedNames.get(method.getName)}
        @{method.getName}
        (@{generatedParameters.get(method.getName)}) {
            throw new @{importedNames.get("unsupportedOperationException")}("Not yet implemented");
        }
    }
}
}
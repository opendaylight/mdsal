@*
 * Copyright (c) 2016 Cisco Systems, Inc. and others.  All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
 *@

@**********************************************************
* Twirl YangTemplate for generating yang snippets.        *
* Twirl is transformed to Scala and compiled. Then,       *
* it can be called from Java with particular input        *
* parameters to render desired output code.               *
*                                                         *
* Note: we should introduce our own format instead of txt *
***********************************************************@

@import org.opendaylight.yangtools.yang.model.api.DataSchemaNode
@import org.opendaylight.yangtools.yang.model.api.UsesNode

@(usesNodes: Set[_ <: UsesNode])
@if(usesNodes != null) {
    @for(usesNode <- usesNodes) {
        @if(usesNode != null) {
            uses @{usesNode.getGroupingPath().getLastComponent().getLocalName()}
            @if(usesNode.getRefines().isEmpty()) {
                ;
            } else {
                {
                @for(path <- usesNode.getRefines().keySet()) {
                    refine @{path.getLastComponent()} {
                    @if(usesNode.getRefines().get(path).isInstanceOf[DataSchemaNode]) {
                            @yangTemplateWriteDataSchemaNode(usesNode.getRefines().get(path).asInstanceOf[DataSchemaNode])
                        }
                    }
                }
                }
            }
        }
    }
}
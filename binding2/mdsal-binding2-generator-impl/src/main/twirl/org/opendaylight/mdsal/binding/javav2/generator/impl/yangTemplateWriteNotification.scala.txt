@*
 * Copyright (c) 2016 Cisco Systems, Inc. and others.  All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
 *@

@**********************************************************
* Twirl YangTemplate for generating yang snippets.        *
* Twirl is transformed to Scala and compiled. Then,       *
* it can be called from Java with particular input        *
* parameters to render desired output code.               *
*                                                         *
* Note: we should introduce our own format instead of txt *
***********************************************************@

@import org.opendaylight.yangtools.yang.model.api.NotificationDefinition
@import org.opendaylight.yangtools.yang.model.api.Status

@(notification: NotificationDefinition)
notification @{notification.getQName().getLocalName()} {
    @if(notification.getDescription() != null && !notification.getDescription().isEmpty()) {
        description "@{notification.getDescription()}";
    }
    @if(notification.getChildNodes() != null && !notification.getChildNodes().isEmpty()) {
        @yangTemplateWriteDataSchemaNodes(notification.getChildNodes())
    }
    @if(notification.getAvailableAugmentations() != null && !notification.getAvailableAugmentations().isEmpty()) {
        @yangTemplateWriteAugments(notification.getAvailableAugmentations())
    }
    @if(notification.getGroupings() != null && !notification.getGroupings().isEmpty()) {
        @yangTemplateWriteGroupingDefs(notification.getGroupings())
    }
    @if(notification.getUses() != null && !notification.getUses().isEmpty()) {
        @yangTemplateWriteUsesNodes(notification.getUses())
    }
    @if(notification.getReference() != null && !notification.getReference().isEmpty()) {
        reference "@{notification.getReference()}";
    }
    @if(notification.getStatus() != Status.CURRENT) {
        status @{notification.getStatus()};
    }
}
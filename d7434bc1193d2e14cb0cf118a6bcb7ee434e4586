{
  "comments": [
    {
      "key": {
        "uuid": "7a6b29fe_51f501eb",
        "filename": "singleton-service/mdsal-singleton-dom-impl/src/main/java/org/opendaylight/mdsal/singleton/dom/impl/ClusterSingletonServiceGroupImpl.java",
        "patchSetId": 7
      },
      "lineNbr": 217,
      "author": {
        "id": 1842
      },
      "writtenOn": "2016-10-03T16:09:01Z",
      "side": 1,
      "message": "Should add @GuardedBy(\"clusterLock\") here since it references serviceGroup.",
      "revId": "d7434bc1193d2e14cb0cf118a6bcb7ee434e4586",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_310845d9",
        "filename": "singleton-service/mdsal-singleton-dom-impl/src/main/java/org/opendaylight/mdsal/singleton/dom/impl/ClusterSingletonServiceGroupImpl.java",
        "patchSetId": 7
      },
      "lineNbr": 222,
      "author": {
        "id": 1842
      },
      "writtenOn": "2016-10-03T16:09:01Z",
      "side": 1,
      "message": "The calling method will also call closeResources on line 214 which could potentially cause the provider instance to be closed twice (probably not now but if the code was changed in the future).  I think it would be safer to let the caller call closeResources. You can return a boolean indicating if the provider instance needs to be closed (i.e. return serviceGroup.isEmpty() here and set needCloseProviderInstance above).",
      "revId": "d7434bc1193d2e14cb0cf118a6bcb7ee434e4586",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_b122954f",
        "filename": "singleton-service/mdsal-singleton-dom-impl/src/main/java/org/opendaylight/mdsal/singleton/dom/impl/ClusterSingletonServiceGroupImpl.java",
        "patchSetId": 7
      },
      "lineNbr": 352,
      "author": {
        "id": 1842
      },
      "writtenOn": "2016-10-03T16:09:01Z",
      "side": 1,
      "message": "Do we really need the Verify checks here? It seems it doesn\u0027t really matter what serviceEntityCandidateReg is set to here so the Verify checks are making assumptions about state ordering and may still cause latent problems since the service and close entities have no linkage in EOS and thus could be closed in either order.",
      "revId": "d7434bc1193d2e14cb0cf118a6bcb7ee434e4586",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_919319a2",
        "filename": "singleton-service/mdsal-singleton-dom-impl/src/test/java/org/opendaylight/mdsal/singleton/dom/impl/DOMClusterSingletonServiceProviderAsyncImplTest.java",
        "patchSetId": 7
      },
      "lineNbr": 79,
      "author": {
        "id": 1842
      },
      "writtenOn": "2016-10-03T16:09:01Z",
      "side": 1,
      "message": "Should call cancel here instead of relying on the finalizer.",
      "revId": "d7434bc1193d2e14cb0cf118a6bcb7ee434e4586",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}